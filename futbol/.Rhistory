write.csv(y3,"y3.csv")
write.csv(D3,"d3.csv")
write.csv(tourG3,"tourG3.csv")
write.csv(x2,"x2.csv")
write.csv(y2,"y2.csv")
write.csv(D2,"d2.csv")
write.csv(tourG2,"tourG2.csv")
write.csv(x1,"x1.csv")
write.csv(y1,"y1.csv")
write.csv(D1,"d1.csv")
write.csv(tourG1,"tourG1.csv")
D=read.csv("D1.csv",row.names = 1)
x=read.csv("x1.csv",row.names = 1)
y=read.csv("y1.csv",row.names = 1)
tourG=read.csv("tourG1.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
D=read.csv("D1.csv",row.names = 1)
x=read.csv("x1.csv",row.names = 1)[,1]
y=read.csv("y1.csv",row.names = 1)[,1]
tourG=read.csv("tourG1.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 25, col = i, lwd = 2)
}
library(GA)
data("eurodist", package = "datasets")
nTiendas=20
#set.seed(4242425442)
NoCars=3
MAX=nTiendas*1.25
depotExtra=NoCars-1
x <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,-50,0),20)
y <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,0,50),-15)
distancias=function(x,y){
D=diag(length(x))
for(i in 1:length(x)){
for(j in 1:length(x)){
d=sqrt((x[i]-x[j])^2+ (y[i]-y[j])^2)
D[i,j]=d
D[j,i]=d
}
}
return(D)
}
D=distancias(x,y)
colnames(D)=paste("Peluqueria",1:ncol(D))
colnames(D)[ncol(D)]="Central"
#D=D[1:18,1:18]
DExtra=diag(depotExtra+1)
diag(DExtra)=0
for(i in 1:(depotExtra+1)){
for(j in i:(depotExtra+1)){
if(i!=j){
DExtra[i,j]=100000
DExtra[j,i]=100000
}
}
}
cExtra=D[-ncol(D),ncol(D)]
rExtra=D[ncol(D),-ncol(D)]
for(i in 1:depotExtra){
cExtra=cbind(cExtra,D[-ncol(D),ncol(D)])
rExtra=rbind(rExtra,D[ncol(D),-ncol(D)])
}
DnoDepot=D[-ncol(D),-ncol(D)]
DN=cbind(DnoDepot,cExtra)
RE=cbind(rExtra,DExtra)
DN=rbind(DN,RE)
#Function to calculate tour length
tourLength <- function(tour, distMatrix) {
depot=length(tour)+1
tour <- c(depot,tour,depot)
l=which(tour>(ncol(D)-1))
difs=diff(l)
route <- embed(tour, 2)[,2:1]
if(max(difs)<MAX){
return(sum(distMatrix[route]))
}else{
return(sum(distMatrix[route])*100)
}
}
#Firness function to be maximized
tspFitness <- function(tour, ...) 1/tourLength(tour, ...)
GA <- ga(type = "permutation", fitness = tspFitness, distMatrix = DN,
min = 1, max = (ncol(DN)-1), popSize = 200, maxiter = 5000,
run = 500, pmutation = 0.3)
library(GA)
data("eurodist", package = "datasets")
nTiendas=20
#set.seed(4242425442)
NoCars=3
MAX=nTiendas*1.25
depotExtra=NoCars-1
x <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,-50,0),20)
y <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,0,50),-15)
distancias=function(x,y){
D=diag(length(x))
for(i in 1:length(x)){
for(j in 1:length(x)){
d=sqrt((x[i]-x[j])^2+ (y[i]-y[j])^2)
D[i,j]=d
D[j,i]=d
}
}
return(D)
}
D=distancias(x,y)
colnames(D)=paste("Peluqueria",1:ncol(D))
colnames(D)[ncol(D)]="Central"
#D=D[1:18,1:18]
DExtra=diag(depotExtra+1)
diag(DExtra)=0
for(i in 1:(depotExtra+1)){
for(j in i:(depotExtra+1)){
if(i!=j){
DExtra[i,j]=100000
DExtra[j,i]=100000
}
}
}
cExtra=D[-ncol(D),ncol(D)]
rExtra=D[ncol(D),-ncol(D)]
for(i in 1:depotExtra){
cExtra=cbind(cExtra,D[-ncol(D),ncol(D)])
rExtra=rbind(rExtra,D[ncol(D),-ncol(D)])
}
DnoDepot=D[-ncol(D),-ncol(D)]
DN=cbind(DnoDepot,cExtra)
RE=cbind(rExtra,DExtra)
DN=rbind(DN,RE)
#Function to calculate tour length
tourLength <- function(tour, distMatrix) {
depot=length(tour)+1
tour <- c(depot,tour,depot)
l=which(tour>(ncol(D)-1))
difs=diff(l)
route <- embed(tour, 2)[,2:1]
if(max(difs)<MAX){
return(sum(distMatrix[route]))
}else{
return(sum(distMatrix[route])*100)
}
}
#Firness function to be maximized
tspFitness <- function(tour, ...) 1/tourLength(tour, ...)
GA <- ga(type = "permutation", fitness = tspFitness, distMatrix = DN,
min = 1, max = (ncol(DN)-1), popSize = 200, maxiter = 5000,
run = 500, pmutation = 0.3)
solutions=GA@solution[1, ]
solutions[which(solutions>(ncol(D)-1))]=ncol(D)
tourG1 <- as.numeric(c(ncol(D),solutions,ncol(D)))
x1=x
y1=y
D1=D
## SEGUNDO
library(GA)
data("eurodist", package = "datasets")
nTiendas=40
#set.seed(4242425442)
NoCars=3
MAX=nTiendas*1.25
depotExtra=NoCars-1
x <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,-50,0),20)
y <- c(runif(nTiendas,-50,0),runif(nTiendas,0,50),runif(nTiendas,0,50),-15)
distancias=function(x,y){
D=diag(length(x))
for(i in 1:length(x)){
for(j in 1:length(x)){
d=sqrt((x[i]-x[j])^2+ (y[i]-y[j])^2)
D[i,j]=d
D[j,i]=d
}
}
return(D)
}
D=distancias(x,y)
colnames(D)=paste("Peluqueria",1:ncol(D))
colnames(D)[ncol(D)]="Central"
#D=D[1:18,1:18]
DExtra=diag(depotExtra+1)
diag(DExtra)=0
for(i in 1:(depotExtra+1)){
for(j in i:(depotExtra+1)){
if(i!=j){
DExtra[i,j]=100000
DExtra[j,i]=100000
}
}
}
cExtra=D[-ncol(D),ncol(D)]
rExtra=D[ncol(D),-ncol(D)]
for(i in 1:depotExtra){
cExtra=cbind(cExtra,D[-ncol(D),ncol(D)])
rExtra=rbind(rExtra,D[ncol(D),-ncol(D)])
}
DnoDepot=D[-ncol(D),-ncol(D)]
DN=cbind(DnoDepot,cExtra)
RE=cbind(rExtra,DExtra)
DN=rbind(DN,RE)
#Function to calculate tour length
tourLength <- function(tour, distMatrix) {
depot=length(tour)+1
tour <- c(depot,tour,depot)
l=which(tour>(ncol(D)-1))
difs=diff(l)
route <- embed(tour, 2)[,2:1]
if(max(difs)<MAX){
return(sum(distMatrix[route]))
}else{
return(sum(distMatrix[route])*100)
}
}
#Firness function to be maximized
tspFitness <- function(tour, ...) 1/tourLength(tour, ...)
GA <- ga(type = "permutation", fitness = tspFitness, distMatrix = DN,
min = 1, max = (ncol(DN)-1), popSize = 200, maxiter = 10000,
run = 500, pmutation = 0.3)
solutions=GA@solution[1, ]
solutions[which(solutions>(ncol(D)-1))]=ncol(D)
tourG2 <- as.numeric(c(ncol(D),solutions,ncol(D)))
x2=x
y2=y
D2=D
### CUARTO
library(GA)
data("eurodist", package = "datasets")
nTiendas=100
#set.seed(4242425442)
NoCars=4
MAX=nTiendas*0.4
depotExtra=NoCars-1
x <- c(runif(nTiendas,-50,50),20)
y <- c(runif(nTiendas,-50,50),-15)
distancias=function(x,y){
D=diag(length(x))
for(i in 1:length(x)){
for(j in 1:length(x)){
d=sqrt((x[i]-x[j])^2+ (y[i]-y[j])^2)
D[i,j]=d
D[j,i]=d
}
}
return(D)
}
D=distancias(x,y)
colnames(D)=paste("Peluqueria",1:ncol(D))
colnames(D)[ncol(D)]="Central"
#D=D[1:18,1:18]
DExtra=diag(depotExtra+1)
diag(DExtra)=0
for(i in 1:(depotExtra+1)){
for(j in i:(depotExtra+1)){
if(i!=j){
DExtra[i,j]=100000
DExtra[j,i]=100000
}
}
}
cExtra=D[-ncol(D),ncol(D)]
rExtra=D[ncol(D),-ncol(D)]
for(i in 1:depotExtra){
cExtra=cbind(cExtra,D[-ncol(D),ncol(D)])
rExtra=rbind(rExtra,D[ncol(D),-ncol(D)])
}
DnoDepot=D[-ncol(D),-ncol(D)]
DN=cbind(DnoDepot,cExtra)
RE=cbind(rExtra,DExtra)
DN=rbind(DN,RE)
#Function to calculate tour length
tourLength <- function(tour, distMatrix) {
depot=length(tour)+1
tour <- c(depot,tour,depot)
l=which(tour>(ncol(D)-1))
difs=diff(l)
route <- embed(tour, 2)[,2:1]
if(max(difs)<MAX){
return(sum(distMatrix[route]))
}else{
return(sum(distMatrix[route])*100)
}
}
#Firness function to be maximized
tspFitness <- function(tour, ...) 1/tourLength(tour, ...)
GA <- ga(type = "permutation", fitness = tspFitness, distMatrix = DN,
min = 1, max = (ncol(DN)-1), popSize = 200, maxiter = 10000,
run = 500, pmutation = 0.3)
solutions=GA@solution[1, ]
solutions[which(solutions>(ncol(D)-1))]=ncol(D)
tourG3 <- as.numeric(c(ncol(D),solutions,ncol(D)))
x3=x
y3=y
D3=D
write.csv(x3,"x3.csv")
write.csv(y3,"y3.csv")
write.csv(D3,"d3.csv")
write.csv(tourG3,"tourG3.csv")
write.csv(x2,"x2.csv")
write.csv(y2,"y2.csv")
write.csv(D2,"d2.csv")
write.csv(tourG2,"tourG2.csv")
write.csv(x1,"x1.csv")
write.csv(y1,"y1.csv")
write.csv(D1,"d1.csv")
write.csv(tourG1,"tourG1.csv")
### CUARTO
library(GA)
data("eurodist", package = "datasets")
nTiendas=200
#set.seed(4242425442)
NoCars=5
MAX=nTiendas*0.33
depotExtra=NoCars-1
x <- c(runif(nTiendas,-50,50),20)
y <- c(runif(nTiendas,-50,50),-15)
distancias=function(x,y){
D=diag(length(x))
for(i in 1:length(x)){
for(j in 1:length(x)){
d=sqrt((x[i]-x[j])^2+ (y[i]-y[j])^2)
D[i,j]=d
D[j,i]=d
}
}
return(D)
}
D=distancias(x,y)
colnames(D)=paste("Peluqueria",1:ncol(D))
colnames(D)[ncol(D)]="Central"
#D=D[1:18,1:18]
DExtra=diag(depotExtra+1)
diag(DExtra)=0
for(i in 1:(depotExtra+1)){
for(j in i:(depotExtra+1)){
if(i!=j){
DExtra[i,j]=100000
DExtra[j,i]=100000
}
}
}
cExtra=D[-ncol(D),ncol(D)]
rExtra=D[ncol(D),-ncol(D)]
for(i in 1:depotExtra){
cExtra=cbind(cExtra,D[-ncol(D),ncol(D)])
rExtra=rbind(rExtra,D[ncol(D),-ncol(D)])
}
DnoDepot=D[-ncol(D),-ncol(D)]
DN=cbind(DnoDepot,cExtra)
RE=cbind(rExtra,DExtra)
DN=rbind(DN,RE)
#Function to calculate tour length
tourLength <- function(tour, distMatrix) {
depot=length(tour)+1
tour <- c(depot,tour,depot)
l=which(tour>(ncol(D)-1))
difs=diff(l)
route <- embed(tour, 2)[,2:1]
if(max(difs)<MAX){
return(sum(distMatrix[route]))
}else{
return(sum(distMatrix[route])*100)
}
}
#Firness function to be maximized
tspFitness <- function(tour, ...) 1/tourLength(tour, ...)
GA <- ga(type = "permutation", fitness = tspFitness, distMatrix = DN,
min = 1, max = (ncol(DN)-1), popSize = 200, maxiter = 10000,
run = 500, pmutation = 0.3)
solutions=GA@solution[1, ]
solutions[which(solutions>(ncol(D)-1))]=ncol(D)
tourG4 <- as.numeric(c(ncol(D),solutions,ncol(D)))
write.csv(x,"x4.csv")
write.csv(y,"y4.csv")
write.csv(D,"d4.csv")
write.csv(tourG4,"tourG4.csv")
citation("GA")
cite(GA)
cite("GA")
citation("GA")
citation("GA",bib)
x=citation("GA")
toBibtex(x)
process.env.PATH = ["/usr/bin",
"/usr/local/bin",
].join(":")
knitr::opts_chunk$set(echo = FALSE)
NoCars=4
D=read.csv("D4.csv",row.names = 1)
x=read.csv("x4.csv",row.names = 1)[,1]
y=read.csv("y4.csv",row.names = 1)[,1]
tourG=read.csv("tourG4.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 25, col = i, lwd = 2)
}
tourG4
which(tourG4==201)
NoCars=5
D=read.csv("D4.csv",row.names = 1)
x=read.csv("x4.csv",row.names = 1)[,1]
y=read.csv("y4.csv",row.names = 1)[,1]
tourG=read.csv("tourG4.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 25, col = i, lwd = 2)
tour
which(tourG==ncol(D)
)
which(tourG==ncol(D))[i+1]
i=1
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
tour
desde
desde=1
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
tour
desde=which(tourG==ncol(D))[i+1]
desde
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 25, col = i, lwd = 2)
arrows(x[tour], y[tour], x[tour], y[tour],
length = 0.15, angle = 25, col = i, lwd = 2)
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour], y[tour], x[tour], y[tour],
length = 0.15, angle = 25, col = i, lwd = 2)
tourG=read.csv("tourG4.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour], y[tour], x[tour], y[tour],
length = 0.15, angle = 25, col = i, lwd = 2)
}
NoCars=5
D=read.csv("D4.csv",row.names = 1)
x=read.csv("x4.csv",row.names = 1)[,1]
y=read.csv("y4.csv",row.names = 1)[,1]
tourG=read.csv("tourG4.csv",row.names = 1)[,1]
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 25, col = i, lwd = 2)
}
desde=1
i=1
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
x[tour[-n]]
y[tour[-n]]
x[tour[-1]]
y[tour[-1]
]
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 10, col = i, lwd = 2)
}
plot(x, y, type = "n", asp = 1, xlab = "", ylab = "")
abline(h = pretty(range(x), 10), v = pretty(range(y), 10),
col = "light gray")
desde=1
for(i in 1:NoCars){
tour=tourG[desde:which(tourG==ncol(D))[i+1]]
desde=which(tourG==ncol(D))[i+1]
n <- length(tour)
arrows(x[tour[-n]], y[tour[-n]], x[tour[-1]], y[tour[-1]],
length = 0.15, angle = 10, col = i, lwd = 2)
}
A=data.frame(nombres=c("mateo","magda","susana"),edad=c(22,59,19))
A
A=A[c("mateo","susana","magda"),]
A
